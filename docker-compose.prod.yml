version: '3'

services: 
  #nginx:
  #  build:
  #    context: ./nginx
  #    dockerfile: Dockerfile
  #  image: nginx
  #  restart: always
  #  container_name: nginx
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #  depends_on: 
  #    - hush.mutezone
  #    - mutezone
  #  networks:
  #    - app-network
  #  volumes:
  #    #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #    - .:/usr/share/nginx/html
  #    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #  #certbot:
  #  #  image: certbot/certbot
  
  hush.mutezone:
    build: 
      context: ./amb_back
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: amb_back
    hostname: hush
    domainname: mutezone.site
    volumes:
      - ./amb_back/target:/usr/target
      - ./resources:/usr/resources
    restart: always
    #networks:
    #  - app-network
    
    #domainname: mutezone.site
    #environment: 
    #  - VIRTUAL_HOST=mutezone.site
    #  - LETSENCRYPT_HOST=mutezone.site

  mutezone:
    build:
      context: ./amb_front
      dockerfile: Dockerfile
    ports:
      - '80:8080' 
    container_name: amb_front
    domainname: mutezone.site
    volumes:
      - ./amb_front:/usr/src/app/amb_front
      - /usr/src/app/amb_front/node_modules
    restart: always
#
  postgres:
    image: postgres:11-alpine
    restart: always
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: 
        - 5432:5432
#    
##      
##
#networks:
#  app-network:
#    driver: bridge
#
#volumes:
#  db_data:
#    driver: local
