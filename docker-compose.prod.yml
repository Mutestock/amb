version: '3'

services: 
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx
    restart: always
    container_name: nginx
    ports:
      - "80:8080"
      - "443:443"
    depends_on: 
      - hush.mutezone
      - mutezone
    networks:
      - app-network
    volumes:
      #- ./nginx/default.conf:/etc/nginx/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - .:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    #certbot:
    #  image: certbot/certbot

  hush.mutezone:
    build: 
      context: ./amb_back
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: amb_back
    #hostname: hush
    #domainname: mutezone.site
    volumes:
      - ./target:/usr/target
    networks:
      - app-network
    restart: on-failure

  mutezone:
    build:
      context: ./amb_front
      dockerfile: Dockerfile
    ports:
      - "8080:8080"    
    environment: 
      - VIRTUAL_HOST=mutezone.site
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=mutezone
      - BACKEND_HOST=hush.mutezone
    container_name: amb_front
    depends_on: 
      - hush.mutezone
    domainname: mutezone.site
    volumes:
      - ./amb_front:/usr/src/app/amb_front
      - /usr/src/app/amb_front/node_modules
    networks:
      - app-network
    restart: on-failure
#
  postgres_db:
    image: postgres
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "9595:9595"
    networks: 
      - app-network
    
#      
#
networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
