version: '3'

services: 

  


  server:
    build: 
      context: ./amb_back
      dockerfile: Dockerfile
    #ports:
    #  - "8000:80"
    #container_name: amb_back
    #hostname: hush
    # domainname: mutezone.site
    volumes:
      - ./target:/usr/target
    #networks:
    #  - app-network

    nginx:
      restart: always
      build:
        dockerfile: Dockerfile
        context: ./controller
      ports:
        - '5000:80'

  #  image: nginx
  #  restart: always
  #  container_name: nginx
  #  ports:
  #    - 0.0.0.0:80:80
  #    - 0.0.0.0:443:443
  #  depends_on: 
  #    - hush.mutezone
  #    - mutezone
  #  networks:
  #    - app-network
  #  volumes:
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    #certbot:
    #  image: certbot/certbot


  client:
    build:
      context: ./amb_front
      dockerfile: Dockerfile
    #ports:
    #  - "8080:80"
    #container_name: amb_front
    #depends_on: 
    #  - hush.mutezone
    # domainname: mutezone.site
    volumes:
      - ./amb_front:/usr/src/app/amb_front
      - /usr/src/app/amb_front/node_modules
    #networks:
    #  - app-network
#
  postgres_db:
    image: postgres
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "9595:9595"
    networks: 
      - app-network
    
#      
#
networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
