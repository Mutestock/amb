version: '3'

services: 
  hush.mutezone:
    build: 
      context: ./amb_back
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: amb_back
    environment: 
      - DATABASE_API_KEY=${DATABASE_API_KEY}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_DB}
      - DATABASE_URL=postgres://${PG_USER}:${PG_PASS}@amb_postgres2_1:5432/${PG_DB}
      #- DATABASE_URL=${DATABASE_URL}
      - RUST_BACKTRACE=1
    volumes:
      - ./amb_back/target:/usr/target
      - ../resources:/usr/resources
      #- ./utils/libpq:/usr/include/libpq
      #- ./utils/file:/usr/lib/libpq.so
    networks:
      - app-network      

  mutezone:
    build:
      context: ./amb_front
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: amb_front
    environment: 
      - VUE_APP_BACKEND_HOST=amb_hush.mutezone
    #domainname: mutezone.site
    volumes:
      - ./amb_front:/usr/src/app/amb_front
      - /usr/src/app/amb_front/node_modules
      - ../resources:/usr/resources
    networks:
      - app-network

  postgres2:
    image: postgres:11-alpine
    restart: always
    environment: 
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_DB}
      - PGDATA=/var/lib/postgres/data
    ports: 
        - 5432:5432
    volumes:
        - ./data/postgres:/var/lib/postgresql/data
    networks: 
      - app-network

networks:
  app-network:
    driver: "bridge"
